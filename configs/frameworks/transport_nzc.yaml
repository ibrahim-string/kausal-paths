# Required nodes from outside the framework:
# population
# co2_unit_price
# net_emissions
# total_cost
# Required dimensions from outside the framework:
# ghg
# scope
# transport_mode
# pollutant
# stakeholder
# Required parameters from outside the framework:
# population_growth_rate

nodes:
- id: transport_emissions
  name: Transport emissions
  description: This module (all nodes upstream) is based on the excel sheets 1.0 - 1.4.2 Passenger trans. levers.
    Note! MIA = Model - inputs & assumptions, CDR = City data - Data requests.
    In the default datasets, I think we should have historical values for years 2018-2023.
    Then, the forecast values do not start before 2024 due to the defaults.
  type: simple.EmissionFactorActivity
  quantity: emissions
  unit: kt/a
  output_nodes:
  - id: net_emissions
    from_dimensions:
    - id: transport_mode
      flatten: true
  input_dimensions: [transport_mode, ghg, scope]
  output_dimensions: [transport_mode, ghg, scope]
  input_nodes:
  - id: vehicle_kilometres
    to_dimensions:
    - id: ghg
      categories: [co2e]
    - id: scope
      categories: [scope1]
    - id: transport_mode
  - id: transport_emission_factor
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    to_dimensions:
    - id: transport_mode
    - id: ghg
      categories: [co2e]
    - id: scope
      categories: [scope1]
  color: '#014B30'
#  color: '#ff4f57'
#  color: '#0047b6'

- id: baseline_year_emission_factor
  name: Baseline year emission factor
  description: 'TODO Data from Data 1&2 Tranportation, E174:AF179. TODO Upstream calculations based on Model inputs & 
    assumptions F194 and F207 needs to be included in the model. Emission factor is a weighted average existing and
    new car fleet, where 0.5 * X % is renewed annually (X = city data request D47, share of fleet that is less than 2 years old). The current emission factors are asked from the user (City data request D34:D43) but the new
    emission factors come from data; the weighted average of the two trends is calculated.
    MATIAS: DO NOT START FROM HERE; emission fractions are still under construction.
    <p>FROZEN SCENARIO: Emission factors are constant across time.</p>
    <p>DIMENSIONS: pollutant (CO2, NOx, PM2.5, PM10 combustion and other). transport_mode (cars, buses, trains)</p>'
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_mode]
  output_dimensions: [pollutant, transport_mode]
  input_datasets:
  - id: nzc/defaults/transport
  params:
  - id: gpc_sector
    value: transport_emission_factor_for_baseline_fleet

- id: new_fleet_emission_factor
  name: New fleet emission factor
  description: 'Emission factors for new cars following the EURO 6 standard. (EU: Cars and Light Trucks. 
    https://www.dieselnet.com/standards/eu/ld.php) TODO Implement as described below.
    This node is needed in vehicle fleet upgrade. The idea is that there are several internal categories of vehicle types (e.g. i EURO standard classes and each class has a proportion of P_i. The average emission factor is
    E_t = sum_i(E_i,t * P_i,t) where i is class and t is timepoint. This is complicated by gradual shift of classes such that
    P_i,t = P_i,t0 * product(a_i,0, ..., a_i,t), where a_i,t are the survival rates and must be defined in a way that sum_i(P_i,t) = 1 for each t.
    In this use case, there are two classes, current and EURO 6. But the CO2 emission factor is decreasing in time.
    The computation logic is that when a car enters the fleet, it has the same survival probability as all other
    cars in the fleet.
    Finally, we assume that E is constant for each vehicle as long as it is in the fleet. Therefore, each
    E_i,t creates a cohort that affects the average of all E_i,t* where t* >= t.
    This is handled by looking at each E_i,t cohort until the last time point. Importantly, if a cohort exists in the fleet already, only the last timepoint with a value is calculated (as all previous timepoints reflect the same cohort) but if it is a new cohort, it is calculated and new timepoints are interpreted as new cohorts of those new timepoints.'
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_mode]
  output_dimensions: [pollutant, transport_mode]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_emission_factor_for_new_fleet

- id: remaining_old_car_fleet
  name: Remaining old car fleet
  type: costs.ExponentialNode
  description: The fraction of remaining car fleet that existed in 2018. TODO Should this be made an action?
  quantity: fraction
  unit: '%'
  historical_values: [[2018, 100.0]]
  params:
  - id: annual_change
    value: 5
    unit: '%'
    min_value: 0
    max_value: 10
    is_customizable: true
    is_visible: true
  - id: is_decreasing_rate
    value: true

- id: new_car_fleet_fraction
  name: New car fleet fraction
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%'
  input_nodes:
  - id: remaining_old_car_fleet
    tags: [complement]

- id: car_emission_factor
  name: Car emission factor
  description: Emission factor for the current car fleet. TODO Note that the calculation is not identical to what is in NZC excel, because replicating that requires a new node type that will be build later. See New fleet emission factor for details.
  type: formula.FormulaNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_mode]
  output_dimensions: [pollutant, transport_mode]
  input_nodes:
  - id: baseline_year_emission_factor
    to_dimensions:
    - id: pollutant
    - id: transport_mode
  - id: new_fleet_emission_factor
    to_dimensions:
    - id: pollutant
    - id: transport_mode
  - id: remaining_old_car_fleet
    to_dimensions: []
  - id: new_car_fleet_fraction
    to_dimensions: []
  params:
  - id: formula
    value: baseline_year_emission_factor * remaining_old_car_fleet + new_fleet_emission_factor * new_car_fleet_fraction

- id: bus_emission_factor
  name: Bus emission factor
  description: TODO Update calculations
  type: simple.AdditiveNode
  quantity: emission_factor
  unit: g/vkm
  historical_values: [[2018, 800], [2023, 700]]
  input_dataset_processors: [LinearInterpolation]
  output_nodes:
  - id: transport_emission_factor
    to_dimensions:
    - id: pollutant
      categories: [co2]
    - id: transport_mode
      categories: [buses]

- id: train_emission_factor
  name: Train emission factor
  description: TODO Update calculations
  type: simple.AdditiveNode
  quantity: emission_factor
  unit: g/vkm
  historical_values: [[2018, 1654], [2023, 1654]]
  input_dataset_processors: [LinearInterpolation]
  output_nodes:
  - id: transport_emission_factor
    to_dimensions:
    - id: pollutant
      categories: [co2]
    - id: transport_mode
      categories: [trains]

- id: transport_emission_factor
  name: Transport emission factor
  description: TODO Update calculations
  type: simple.AdditiveNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_mode]
  output_dimensions: [pollutant, transport_mode]
  input_nodes:
  - id: car_emission_factor
    to_dimensions:
    - id: transport_mode
    - id: pollutant

- id: transport_air_pollution_emissions
  name: Transport air pollution emissions
  type: simple.MultiplicativeNode # EmissionFactorActivity
  quantity: emissions
  unit: t/a
  input_dimensions: [pollutant, transport_mode]
  output_dimensions: [pollutant, transport_mode]
  input_nodes:
  - id: transport_emission_factor
    from_dimensions:
    - id: pollutant
      categories: [pm25_combustion, pm10_combustion, pm25_wear_tear, pm10_wear_tear, nox]
    to_dimensions:
    - id: pollutant
    - id: transport_mode
  - id: vehicle_kilometres
    to_dimensions:
    - id: transport_mode

- id: vehicle_kilometres
  name: Vehicle kilometres
  type: simple.MultiplicativeNode
  quantity: mileage
  unit: Mvkm/a
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  input_nodes:
  - id: passenger_kilometres
  - id: transport_efficiency
    tags: [geometric_inverse]

- id: transport_efficiency
  name: Transport efficiency
  description: 'Transport efficiency comes from CDR D28:d30 via MIA D188:190. It is constant across time.
    <p>DIMENSIONS: Vehicle type (car, bus, train, walking)</p>' 
  type: gpc.DatasetNode
  quantity: occupancy_factor
  unit: pkm/vkm
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_efficiency

- id: passenger_kilometres
  name: Passenger kilometres
  description: We assume fixed amount per person per day. Data comes from CDR D22:D25 via MIA F182:F185.
    TODO Ask if we want to ask values per person or in total, if the variable depends directly on population size anyway. Passenger kilometre trend depends on population growth and is calculated accordingly.
#  type: costs.ExponentialNode  # FIXME Check growth rate
  type: gpc.DatasetNode
  quantity: mileage
  unit: Mpkm/a
  input_datasets: [nzc/defaults/transport]
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  params:
#  - id: annual_change
#    ref: population_growth_rate
  - id: gpc_sector
    value: passenger_kilometers

- id: transport_air_pollution_unit_price
  name: Transport air pollution unit price
  description: 'Unit prices for air pollutants, noise, accidents, and CO2 come from a single source
    (Essen et al., 2019). Datasets can be created from 1.1 Reduce transport need G129:G134 (CO2 and air pollutants),
    G169:G179 (noise), G204:G209 (accidents). The values are constant across time.
    <h2>References</h2><ul><li>Essen et. al. (2019). Handbook on the external costs of transport. 
    For European Commission Directorate-General for Mobility and Transport</li></ul>'
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/t
  input_dimensions: [pollutant, cost_type]
  output_dimensions: [pollutant, cost_type]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_air_pollution_unit_price

- id: transport_air_pollution_cost_shares
  name: Transport air pollution cost shares
  description: All cost shares are found on the sheet Data - Distribution stakeholder. All stakeholder
    distributions could be one
    dataset with an internal dimension "Outcome", which is used for filtering when data is fetched.
    See yaml for an example. All shares are constants across time.
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_air_pollution_cost_shares

- id: transport_air_pollution_costs
  name: Transport air pollution costs
  description: TODO Air pollution costs also include CO2 even if it is calculated elsewhere. This results in double counting. CO2 should be removed from here.
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, pollutant, transport_mode, cost_type]
  output_dimensions: [stakeholder, pollutant, transport_mode, cost_type]
  input_nodes:
  - id: transport_air_pollution_unit_price
    to_dimensions:
    - id: cost_type
    - id: pollutant
  - id: transport_air_pollution_emissions
    to_dimensions:
    - id: transport_mode
    - id: pollutant
  - id: transport_air_pollution_cost_shares
    to_dimensions:
    - id: cost_type
    - id: stakeholder
  output_nodes:
  - id: transport_cost
    from_dimensions:
    - id: pollutant
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder
    - id: transport_mode

- id: transport_co2_cost
  name: Transport CO2 cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [scope, transport_mode, cost_type]
  output_dimensions: [scope, transport_mode, cost_type]
  input_nodes:
  - id: transport_emissions
    from_dimensions:
    - id: ghg
      flatten: true
    to_dimensions:
    - id: scope
    - id: transport_mode
  - id: co2_unit_price
    to_dimensions:
    - id: scope
      categories: [scope1]
    - id: transport_mode
      categories: [cars]
    - id: cost_type
      categories: [co2_cost]
  output_nodes:
  - id: transport_cost
    from_dimensions:
    - id: scope
      flatten: true
    to_dimensions:
    - id: stakeholder
      categories: [city]
    - id: transport_mode
    - id: cost_type

- id: transport_noise_unit_price
  name: Transport noise unit price
  description: See transport_air_pollution_unit_price.
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/pkm
  input_dimensions: [transport_mode, cost_type]
  output_dimensions: [transport_mode, cost_type]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_noise_unit_price

- id: transport_noise_cost_shares
  name: Transport noise cost shares
  description: See transport_air_pollution_cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_noise_cost_shares

- id: transport_noise_cost
  name: Transport noise cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: transport_noise_unit_price
    to_dimensions:
    - id: cost_type
    - id: transport_mode
  - id: passenger_kilometres
    to_dimensions:
    - id: stakeholder
      categories: [city]
    - id: transport_mode
  - id: transport_noise_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type
  output_nodes:
  - id: transport_cost
    to_categories:
    - transport_mode
    - stakeholder
    - cost_type

- id: transport_accident_unit_price
  name: Transport accident unit price
  description: See transport_air_pollution_unit_price.
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/pkm
  input_dimensions: [transport_mode, cost_type]
  output_dimensions: [transport_mode, cost_type]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_accident_unit_price

- id: transport_accident_cost_shares
  name: Transport accident cost shares
  description: See transport_air_pollution_cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_accident_cost_shares

- id: transport_accident_cost
  name: Transport accident cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: transport_accident_unit_price
    to_dimensions:
    - id: transport_mode
    - id: cost_type
  - id: passenger_kilometres
    to_dimensions:
    - id: stakeholder
      categories: [city]
    - id: transport_mode
  - id: transport_accident_cost_shares
    to_dimensions:
    - id: transport_mode
      categories: [cars]
    - id: stakeholder
    - id: cost_type
  output_nodes:
  - id: transport_cost
    to_dimensions:
    - id: stakeholder
    - id: transport_mode
    - id: cost_type

- id: public_transport_operation_unit_price
  name: Public transport operation unit price
  description: Operational costs of buses and trains come from Sveriges kommuner och landsting (2017)
    and values are at 1.1 Reduce transport need G236:G241. The values are constant across time.
    <h2>References</h2><ul><li>Essen et. al. (2019). Handbook on the external costs of transport. 
    For European Commission Directorate-General for Mobility and Transport</li>
    <li>Sveriges kommuner och landsting (2017). Kollektivtrafikens kostnadsutveckling – en överblick. https://webbutik.skl.se/sv/artiklar/kollektivtrafikens-kostnadsutveckling-en-overblick.html</li></ul>'
  type: simple.AdditiveNode
  quantity: unit_price
  unit: EUR/vkm
  historical_values: [[2010, 3.3], [2022, 3.3]]
  input_dataset_processors: [LinearInterpolation]

- id: public_transport_operation_cost_shares
  name: Public transport operation cost shares
  description: See transport_air_pollution_cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets:
  - id: nzc/defaults/transport
  params:
  - id: gpc_sector
    value: public_transport_operation_cost_shares

- id: public_transport_operation_cost
  name: Public transport operation cost
  description: FIXME This is way too high because car rather than bus km are used.
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: public_transport_operation_unit_price
    to_dimensions:
    - id: transport_mode
      categories: [cars]
  - id: vehicle_kilometres
    to_dimensions:
    - id: transport_mode
  - id: public_transport_operation_cost_shares
    to_dimensions:
    - id: transport_mode
      categories: [cars]
    - id: stakeholder
    - id: cost_type
  output_nodes: [transport_cost]

- id: transport_energy_factor_ice_petrol_diesel
  name: Transport energy factor - ICE petrol/diesel
  description: Values come from European Commission (2019) and are found from 1.1 Reduce transport need G266.
    <h2>References</h2>
    European commission (2019) - Reducing CO2 emissions from passenger cars.
    https://ec.europa.eu/clima/policies/transport/vehicles/cars_en
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: l/g
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: transport_energy_factor_ice_petrol_diesel

- id: fuel_unit_price
  name: Fuel unit price
  description: The values come from Eurostat (2019) - Electricity prices for household consumers
    and are found from MIA D430.
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/l
  input_dimensions: [cost_type]
  output_dimensions: [cost_type]
  input_datasets: [nzc/defaults/transport]
  params:
  - id: gpc_sector
    value: fuel_unit_price

- id: transport_fuel_cost
  name: Transport fuel cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: transport_emission_factor
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    to_dimensions:
    - id: transport_mode
  - id: transport_energy_factor_ice_petrol_diesel
    to_dimensions:
    - id: transport_mode
      categories: [cars]
  - id: vehicle_kilometres
    to_dimensions:
    - id: transport_mode
  - id: fuel_unit_price
    to_dimensions:
    - id: transport_mode
      categories: [cars]
    - id: stakeholder
      categories: [citizens]
    - id: cost_type
  output_nodes: [transport_cost]

- id: walking_cycling_unit_price
  name: Walking & cycling unit price
  description: 'Value of cycling and walking is 0.5 and 0.2 USD/pkm, respectively
    (Victoria Transport Policy Institute, 2019). Unit price is constant across time.
    Victoria Transport Policy Institute (2019). Evaluating Active Transport Benefits and Costs.
    https://www.vtpi.org/nmt-tdm.pdf This value is supported by another study, which evaluates the
    health-benefits to 0.3-0.5 €/pkm: https://www.researchgate.net/publication/330184791_The_Social_Cost_of_Automobility_Cycling_and_Walking_in_the_European_Union. From these sources, a summary estimate of 0.2966 EUR/pkm is derived.'
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/pkm
  input_datasets: [nzc/defaults/transport]
  input_dimensions: [transport_mode, stakeholder, cost_type]
  output_dimensions: [transport_mode, stakeholder, cost_type]
  params:
  - id: gpc_sector
    value: walking_cycling_unit_price

- id: walking_cycling_cost
  name: Walking & cycling cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: walking_cycling_unit_price
    to_dimensions:
    - id: transport_mode
    - id: stakeholder
    - id: cost_type
  - id: passenger_kilometres
    to_dimensions:
    - id: transport_mode
    - id: stakeholder
      categories: [citizens]
  output_nodes: [transport_cost]

- id: transport_cost
  name: Transport cost
  type: simple.AdditiveNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  output_nodes:
  - id: total_cost
    from_dimensions:
    - id: transport_mode
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder

actions:
- id: reduce_all_motorized_transport
  name: Reduce all motorized transport
  type: simple.LinearCumulativeAdditiveAction
  quantity: fraction
  unit: Mpkm/a
  group: transport
  forecast_values: [[2023, 0], [2030, -1085]]  # 3100 * 0.35
  output_nodes:
  - id: passenger_kilometres
    to_dimensions:
    - id: transport_mode
      categories: [cars]

- id: modal_switch_from_cars_to_other_modes
  name: Modal switch from cars to other modes
  description: Find the right numbeers!  # FIXME
  type: simple.LinearCumulativeAdditiveAction
  quantity: mileage
  unit: Mpkm/a
  group: transport
  forecast_values: [[2023, 0], [2030, -1085]]  # 3100 * 0.35
  output_nodes:
  - id: passenger_kilometres
    to_dimensions:
    - id: transport_mode
      categories: [cars]

- id: car_pooling
  name: Car pooling
  type: simple.LinearCumulativeAdditiveAction
  quantity: fraction
  unit: pkm/vkm
  group: transport
  forecast_values: [[2023, 0], [2030, 0.3]]  # 1.2 * 25 %
  output_nodes:
  - id: transport_efficiency
    to_dimensions:
    - id: transport_mode
      categories: [cars]

- id: electrification_of_passenger_cars
  name: Electrification of passenger cars
  type: simple.LinearCumulativeAdditiveAction  # FIXME MixedAction
  quantity: fraction
  unit: vkm/a
  group: transport
  forecast_values: [[2023, 0], [2030, 0.3]]  # 1.2 * 25 %
  output_nodes:
  - id: vehicle_kilometres
    to_dimensions:
    - id: transport_mode
      categories: [cars]

- id: electrification_of_buses
  name: Electrification of buses
  type: simple.LinearCumulativeAdditiveAction  # FIXME Add correct calculations
  quantity: emission_factor
  unit: g/vkm
  group: transport
  forecast_values: [[2023, 0], [2030, 0.3]]  # 1.2 * 25 %
  output_nodes:
  - id: bus_emission_factor
#    to_dimensions:
#    - id: transport_mode
#      categories: [buses]

