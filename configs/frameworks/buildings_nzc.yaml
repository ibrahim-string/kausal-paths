emission_sectors:

- id: building_emissions
  name: Building emissions
  description: 'This module (all nodes upstream) is based on the excel sheets 3.0 - 3.4 Building & heat levers.'
  part_of: net_emissions

nodes:

# * = data is in the city request dataset
# Model inputs: 176* 519 257* 254* 532 544 545 272* 273* 278 290 296..299* 302..305* 319..322* 586
# 3.4 heat generation: (coming from model inputs) 19 25 248 259

- id: existing_building_stock
  name: Existing building stock
  description: 'Data sources:<ul><li>Model inputs & assumptions, F250. Size of building stock. 
    TODO maybe later: Calculate floor area per person and use population 
    size for scaling.</li><li>Model inputs & assumptions, F519. Rate of demolition and new construction.</li><li>Model inputs & assumptions, F257. Retrofitted area %.</li></ul>
    Calculations: The logic is that the floor area per inhabitant stays constant. Amount of construction is a fixed fraction of existing building stock and the difference between building stock increase and construction is assumed to be demolished. So, logically, construction must be greater than or equal to population growth.
    <p>DIMENSIONS: building_energy_class</p>'
  type: costs.ExponentialNode
  quantity: floor_area
  unit: km**2
  historical_values: [[2018, 78.276], [2019, 78.276], [2020, 78.276]]
  params:
  - id: annual_change
    value: 0.2
    unit: '%'

- id: building_stock
  name: Building stock
  description: Existing building stock minus demolition and new construction.
  type: simple.AdditiveNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: existing_building_stock
    to_dimensions:
    - id: building_energy_class
      categories: [old_no_renovations]

- id: energy_use_intensity
  name: Energy use intensity
  type: simple.AdditiveNode
  quantity: energy_factor
  unit: kWh/m**2/a
  historical_values: [[2020, 21]]

- id: building_heating_type_share
  name: Building heating type share
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%'
  historical_values: [[2020, 99]]

- id: building_energy_use
  name: Building energy use
  description: 'For the frozen scenario, heat energy is relative to population growth.'
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [heating_type, building_energy_class]
  output_dimensions: [heating_type, building_energy_class]
  input_nodes:
  - id: building_stock
    to_dimensions:
    - id: building_energy_class
  - id: energy_use_intensity
    to_dimensions:
    - id: building_energy_class
      categories: [old_no_renovations]
  - id: building_heating_type_share
    to_dimensions:
    - id: heating_type
      categories: [local_heating]

- id: heating_emission_factor
  name: Heating emission factor
  type: simple.AdditiveNode
  quantity: emission_factor
  unit: g/kWh
  historical_values: [[2020, 200]]

- id: building_heating_emissions
  name: Building heating emissions
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [heating_type, ghg, scope]
  output_dimensions: [heating_type, ghg, scope]
  input_nodes:
  - id: building_energy_use
    to_dimensions:
    - id: heating_type
    from_dimensions:
    - id: building_energy_class
      flatten: true
  - id: heating_emission_factor
    to_dimensions:
    - id: heating_type
      categories: [local_heating]
    - id: ghg
      categories: [co2e]
    - id: scope
      categories: [scope2]
  output_nodes:
  - id: building_emissions
    from_dimensions:
    - id: heating_type
      flatten: true
